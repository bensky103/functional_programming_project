[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Eclipse Adoptium Java 21.0.8)
[debug] Load.defaultLoad until apply took 229.367ms
[debug]           Load.loadUnit: plugins took 208.8407ms
[debug]           Load.loadUnit: defsScala took 0.716ms
[debug] [Loading] Scanning directory C:\Users\Guy Bensky\Desktop\functional programming projecct\HIT-FP-Spark-Project\project
[debug]             Load.loadUnit: mkEval took 13.344ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Guy Bensky\Desktop\functional programming projecct\HIT-FP-Spark-Project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.2588 ms
[info] loading settings for project hit-fp-spark-project-build from plugins.sbt ...
[debug]               Load.resolveProject(hit-fp-spark-project-build) took 62.4729ms
[debug]             Load.loadTransitive: finalizeProject(Project(id hit-fp-spark-project-build, base: C:\Users\Guy Bensky\Desktop\functional programming projecct\HIT-FP-Spark-Project\project, plugins: List(<none>))) took 115.959ms
[debug] [Loading] Done in C:\Users\Guy Bensky\Desktop\functional programming projecct\HIT-FP-Spark-Project\project, returning: (hit-fp-spark-project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1021.2537ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.4775ms
[debug]         Load.loadUnit(file:/C:/Users/Guy%20Bensky/Desktop/functional%20programming%20projecct/HIT-FP-Spark-Project/project/, ...) took 1255.5339ms
[debug]       Load.apply: load took 1447.2848ms
[debug]       Load.apply: resolveProjects took 7.8619ms
[debug]       Load.apply: finalTransforms took 93.1785ms
[debug]       Load.apply: config.delegates took 21.7316ms
[debug]       Load.apply: Def.make(settings)... took 918.5317ms
[debug]       Load.apply: structureIndex took 361.2231ms
[debug]       Load.apply: mkStreams took 4.3004ms
[info] loading project definition from C:\Users\Guy Bensky\Desktop\functional programming projecct\HIT-FP-Spark-Project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5322.5792ms
[debug]     Load.loadUnit: defsScala took 0.0066ms
[debug] [Loading] Scanning directory C:\Users\Guy Bensky\Desktop\functional programming projecct\HIT-FP-Spark-Project
[debug]       Load.loadUnit: mkEval took 0.4988ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbtassembly.AssemblyPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.6782 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 4.0808ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Guy Bensky\Desktop\functional programming projecct\HIT-FP-Spark-Project, plugins: List(<none>))) took 9.5193ms
[debug] [Loading] Done in C:\Users\Guy Bensky\Desktop\functional programming projecct\HIT-FP-Spark-Project, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 250.5587ms
[debug]     Load.loadUnit: cleanEvalClasses took 22.9649ms
[debug]   Load.loadUnit(file:/C:/Users/Guy%20Bensky/Desktop/functional%20programming%20projecct/HIT-FP-Spark-Project/, ...) took 5599.5053ms
[debug] Load.apply: load took 5645.7483ms
[debug] Load.apply: resolveProjects took 0.3028ms
[debug] Load.apply: finalTransforms took 43.4731ms
[debug] Load.apply: config.delegates took 0.6279ms
[debug] Load.apply: Def.make(settings)... took 162.0205ms
[debug] Load.apply: structureIndex took 61.6173ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to HIT-FP-Spark-Project (in build file:/C:/Users/Guy%20Bensky/Desktop/functional%20programming%20projecct/HIT-FP-Spark-Project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(runMain Driver, None, None)
[debug] Evaluating tasks: Compile / runMain
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
